local dap = require("dap")
local dap_python = require("dap-python")
local dap_ui = require("dapui")

dap_ui.setup()
dap.listeners.after.event_initialized["dapui_config"] = function()
	dap_ui.open()
end
dap.listeners.before.event_terminated["dapui_config"] = function()
	dap_ui.close()
end
dap.listeners.before.event_exited["dapui_config"] = function()
	dap_ui.close()
end

-- Dap Keymaps
vim.keymap.set("n", "<F5>", function()
	dap.continue()
end)
vim.keymap.set("n", "<F10>", function()
	dap.step_over()
end)
vim.keymap.set("n", "<F11>", function()
	dap.step_into()
end)
vim.keymap.set("n", "<F12>", function()
	dap.step_out()
end)
vim.keymap.set("n", "<Leader>b", function()
	dap.toggle_breakpoint()
end)
vim.keymap.set("n", "<Leader>lp", function()
	dap.set_breakpoint(nil, nil, vim.fn.input("Log point message: "))
end)
vim.keymap.set("n", "<Leader>dr", function()
	dap.repl.open()
end)
vim.keymap.set("n", "<Leader>dl", function()
	dap.run_last()
end)

vim.keymap.set("n", "<leader>duc", function()
	dap_ui.close()
end)
vim.keymap.set("n", "<leader>duo", function()
	dap_ui.open()
end)

-- Python Daps
vim.keymap.set("n", "<leader>dtm", function()
	dap_python.test_method()
end)
vim.keymap.set("n", "<leader>dtc", function()
	dap_python.test_class()
end)
vim.keymap.set("v", "<leader>ds", function()
	dap_python.debug_selection()
end)
